#- name: Crear directorio de UAT
#  ansible.builtin.file:
#    path: /var/opt/ansible/UAT
#    state: directory
#    mode: 0700
    
#- name: Envio de scripts UAT
#  ansible.builtin.copy:
#    src: files/iam_extract_global.sh
#    dest: /tmp
#    mode: 0500
#    force: yes

#- name: Ejecucion de script UAT
#  become: yes
#  become_method: sudo
#  ansible.builtin.shell: /tmp/iam_extract_global.sh 2>/dev/null -c IBM
#  register: ejecutar_uat
#  failed_when: ejecutar_uat.rc not in [ 0, 1 ]
  
#- name: Buscar archivo UAT
#  ansible.builtin.shell: ls -1 /tmp | grep ^IBM
#  register: buscar_archivo_uat
  
#- name: Mover archivo UAT
#  become: yes
#  become_method: sudo
#  ansible.builtin.shell: mv /tmp/{{ item }} /var/opt/ansible/UAT
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"

#- name: Cambiar owner al archivo UAT
#  become: yes
#  become_method: sudo
#  file:
#    path: /var/opt/ansible/UAT/{{ item }}
#    mode: 0440
#    owner: bvmuxat2
#    group: automate
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"

#- name: Envia archivo a repositorio externo UAT
#  synchronize:
#    mode: pull
#    src: /var/opt/ansible/UAT/{{ item }}
#    dest: /var/opt/ansible/UAT
#  delegate_to: clientasbrepo01.asbawx.clt
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"

#- name: Fetch the file from the nodo admin to master
#  fetch:
#    src: /var/opt/ansible/uatgetinfo/{{ item }} 
#    dest: /tmp/
#    flat: yes
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"

#- name: Copy the file from master to nodo admin
#  copy: 
#    src: /tmp/{{ item }}
#    dest: /var/opt/ansible/UAT
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"
#  when: "{{ inventory_hostname == 'clientasbrepo01.asbawx.clt' }}"

#- name: Envia archivo a repositorio externo UAT
#  ansible.builtin.shell: scp bvmuxat2@172.18.0.6:/var/opt/ansible/UAT/{{ item }} /var/opt/ansible/UAT
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"
#  delegate_to: clientasbrepo01.asbawx.clt

#- name: 
#  command: 
#    cmd: ls -1 IBM_24aug2021_clientasb02.mef3
#    chdir: /var/opt/ansible/UAT

#- name: Buscar archivo UAT
#  ansible.builtin.shell: ls -1 /tmp | grep ^IBM
#  register: buscar_archivo_uat

#- name: Despliega contebinido de archivo UAT
#  command: 
#    cmd: cat /tmp/{{ item }}
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"
#  register: contenido_archivo_uat

#- name: Despliega contebinido de archivo UAT
#  command: 
#    cmd: echo {{ item }} >> /tmp/
#  with_items:
#    - "{{ contenido_archivo_uat.stdout_lines }}"
#  delegate_to: clientasbrepo01.asbawx.clt
  
#- name: Imprimir contenido de archivo UAT
#  debug:
#    msg: "{{ contenido_archivo_uat.stdout_lines }}"

#- name: Imprime ejecucion del script UAT
#  debug:
#    msg: "{{ ejecutar_uat.stdout_lines }}"

#- name: Imprime creacion del archivo UAT
#  debug:
#    msg: "{{ buscar_archivo_uat.stdout_lines }}"

- name: Buscar archivo UAT
  ansible.builtin.shell: ls -1 /var/opt/ansible/UAT | grep ^IBM
  register: buscar_archivo_uat

#- name: Recuperar archivo UAT
#  run_once: yes
#  fetch: 
#    src: /var/opt/ansible/UAT/{{ item }}
#    dest: buffer/
#    flat: yes
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"

#- name: Copiar archivo UAT del MCAT a NARepo
#  copy: 
#    src: /tmp/{{ item }}
#    dest: /tmp/
#  with_items:
#    - "{{ buscar_archivo_uat.stdout_lines }}"
#  when: "{{ inventory_hostname == 'clientasbrepo01.asbawx.clt' }}"
  
#- name : Obtener el nombre del nodo administrado donde se ejecupa el playbook
#  command: uname -n
#  register: nodoadmin_output

- name: Crea archivo con el nombre asignado a UAT
  ansible.builtin.shell: 
    cmd: touch /var/opty/ansible/UAT/{{ item }}
    warn: false
  with_items:
    - "{{ buscar_archivo_uat.stdout_lines }}"  
  delegate_to: clientasbrepo01.asbawx.clt

#- name: Imprime la salida del nombre de otro nodo administrado donde no se ejecuta el playbook
#  debug:
#    msg: Este es la salida del {{ otronodoadmin_output.stdout }}

